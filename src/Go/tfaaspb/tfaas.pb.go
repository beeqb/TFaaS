// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tfaas.proto

/*
Package tfaaspb is a generated protocol buffer package.

It is generated from these files:
	tfaas.proto

It has these top-level messages:
	Detector
	Hits
	Pair
	Row
	DataFrame
	Class
	Predictions
*/
package tfaaspb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Detector represents a CMS detector with name and x,y,z coordinates
type Detector struct {
	Name string    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	X    []float32 `protobuf:"fixed32,2,rep,packed,name=x" json:"x,omitempty"`
	Y    []float32 `protobuf:"fixed32,3,rep,packed,name=y" json:"y,omitempty"`
	Z    []float32 `protobuf:"fixed32,4,rep,packed,name=z" json:"z,omitempty"`
}

func (m *Detector) Reset()                    { *m = Detector{} }
func (m *Detector) String() string            { return proto.CompactTextString(m) }
func (*Detector) ProtoMessage()               {}
func (*Detector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Detector) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Detector) GetX() []float32 {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *Detector) GetY() []float32 {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *Detector) GetZ() []float32 {
	if m != nil {
		return m.Z
	}
	return nil
}

// Hits is a collection of detector elements
type Hits struct {
	Det []*Detector `protobuf:"bytes,1,rep,name=det" json:"det,omitempty"`
}

func (m *Hits) Reset()                    { *m = Hits{} }
func (m *Hits) String() string            { return proto.CompactTextString(m) }
func (*Hits) ProtoMessage()               {}
func (*Hits) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Hits) GetDet() []*Detector {
	if m != nil {
		return m.Det
	}
	return nil
}

// Pair is simplest key:value pair (dict) representing a value
type Pair struct {
	Key   string  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value float32 `protobuf:"fixed32,2,opt,name=value" json:"value,omitempty"`
}

func (m *Pair) Reset()                    { *m = Pair{} }
func (m *Pair) String() string            { return proto.CompactTextString(m) }
func (*Pair) ProtoMessage()               {}
func (*Pair) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Pair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Pair) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Row is a collection of key:value pairs
type Row struct {
	Pair []*Pair `protobuf:"bytes,1,rep,name=pair" json:"pair,omitempty"`
}

func (m *Row) Reset()                    { *m = Row{} }
func (m *Row) String() string            { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()               {}
func (*Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Row) GetPair() []*Pair {
	if m != nil {
		return m.Pair
	}
	return nil
}

// DataFrame is a collection of rows
type DataFrame struct {
	Row []*Row `protobuf:"bytes,1,rep,name=row" json:"row,omitempty"`
}

func (m *DataFrame) Reset()                    { *m = DataFrame{} }
func (m *DataFrame) String() string            { return proto.CompactTextString(m) }
func (*DataFrame) ProtoMessage()               {}
func (*DataFrame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DataFrame) GetRow() []*Row {
	if m != nil {
		return m.Row
	}
	return nil
}

// Class represents response from the server, it contains name and probability
type Class struct {
	Name string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	P    float32 `protobuf:"fixed32,2,opt,name=p" json:"p,omitempty"`
}

func (m *Class) Reset()                    { *m = Class{} }
func (m *Class) String() string            { return proto.CompactTextString(m) }
func (*Class) ProtoMessage()               {}
func (*Class) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Class) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Class) GetP() float32 {
	if m != nil {
		return m.P
	}
	return 0
}

// Predictions is collection of class probabilities
type Predictions struct {
	Data []*Class `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *Predictions) Reset()                    { *m = Predictions{} }
func (m *Predictions) String() string            { return proto.CompactTextString(m) }
func (*Predictions) ProtoMessage()               {}
func (*Predictions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Predictions) GetData() []*Class {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Detector)(nil), "tfaaspb.Detector")
	proto.RegisterType((*Hits)(nil), "tfaaspb.Hits")
	proto.RegisterType((*Pair)(nil), "tfaaspb.Pair")
	proto.RegisterType((*Row)(nil), "tfaaspb.Row")
	proto.RegisterType((*DataFrame)(nil), "tfaaspb.DataFrame")
	proto.RegisterType((*Class)(nil), "tfaaspb.Class")
	proto.RegisterType((*Predictions)(nil), "tfaaspb.Predictions")
}

func init() { proto.RegisterFile("tfaas.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x49, 0x93, 0xa9, 0x3b, 0x9d, 0xa2, 0xc1, 0x8b, 0x5c, 0x49, 0x8d, 0x37, 0x95, 0x41,
	0x41, 0x7d, 0x04, 0x87, 0xec, 0x72, 0xe4, 0x0d, 0xce, 0xd6, 0x08, 0xc5, 0xb9, 0x84, 0x24, 0xda,
	0x75, 0x4f, 0x2f, 0x49, 0x63, 0xef, 0x76, 0x77, 0x3e, 0xfe, 0xc3, 0xf7, 0x9f, 0x04, 0xca, 0xf0,
	0x89, 0xe8, 0x1b, 0xeb, 0x4c, 0x30, 0xfc, 0x32, 0x81, 0xdd, 0xca, 0x35, 0x5c, 0xad, 0x74, 0xd0,
	0xbb, 0x60, 0x1c, 0xe7, 0xc0, 0x0e, 0xf8, 0xad, 0x05, 0xa9, 0x48, 0x3d, 0x57, 0x69, 0xe6, 0x0b,
	0x20, 0x47, 0x51, 0x54, 0xb4, 0x2e, 0x14, 0x39, 0x46, 0x1a, 0x04, 0x1d, 0x69, 0x88, 0x74, 0x12,
	0x6c, 0xa4, 0x93, 0x5c, 0x02, 0x5b, 0x77, 0xc1, 0xf3, 0x27, 0xa0, 0xad, 0x0e, 0x82, 0x54, 0xb4,
	0x2e, 0x5f, 0xef, 0x9a, 0x5c, 0xd4, 0xfc, 0xb7, 0xa8, 0x98, 0xca, 0x06, 0xd8, 0x06, 0x3b, 0xc7,
	0x6f, 0x81, 0x7e, 0xe9, 0x21, 0x37, 0xc6, 0x91, 0xdf, 0xc3, 0xec, 0x17, 0xf7, 0x3f, 0x5a, 0x14,
	0x15, 0xa9, 0x0b, 0x35, 0x82, 0xac, 0x81, 0x2a, 0xd3, 0xf3, 0x47, 0x60, 0x16, 0x3b, 0x97, 0xe5,
	0xd7, 0x93, 0x3c, 0xba, 0x54, 0x8a, 0xe4, 0x12, 0xe6, 0x2b, 0x0c, 0xf8, 0xe1, 0xe2, 0xf5, 0x0f,
	0x40, 0x9d, 0xe9, 0xf3, 0xfa, 0x62, 0x5a, 0x57, 0xa6, 0x57, 0x31, 0x90, 0xcf, 0x30, 0x7b, 0xdf,
	0xa3, 0xf7, 0xe7, 0x9e, 0x6e, 0xf3, 0x15, 0xc4, 0xca, 0x17, 0x28, 0x37, 0x4e, 0xb7, 0xdd, 0x2e,
	0x74, 0xe6, 0xe0, 0xb9, 0x04, 0xd6, 0x62, 0xc0, 0xac, 0xbe, 0x99, 0xd4, 0x49, 0xa7, 0x52, 0xb6,
	0xbd, 0x48, 0x7f, 0xfd, 0xf6, 0x17, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xad, 0xc5, 0x43, 0x7a, 0x01,
	0x00, 0x00,
}

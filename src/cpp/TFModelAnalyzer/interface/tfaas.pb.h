// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tfaas.proto

#ifndef PROTOBUF_tfaas_2eproto__INCLUDED
#define PROTOBUF_tfaas_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace tfaas {
class Data;
class DataDefaultTypeInternal;
extern DataDefaultTypeInternal _Data_default_instance_;
class PhysicsObjects;
class PhysicsObjectsDefaultTypeInternal;
extern PhysicsObjectsDefaultTypeInternal _PhysicsObjects_default_instance_;
}  // namespace tfaas

namespace tfaas {

namespace protobuf_tfaas_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_tfaas_2eproto

// ===================================================================

class Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tfaas.Data) */ {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Data(Data&& from) noexcept
    : Data() {
    *this = ::std::move(from);
  }

  inline Data& operator=(Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Data& default_instance();

  static inline const Data* internal_default_instance() {
    return reinterpret_cast<const Data*>(
               &_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Data* other);
  friend void swap(Data& a, Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Data* New() const PROTOBUF_FINAL { return New(NULL); }

  Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float array = 2;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 2;
  float array(int index) const;
  void set_array(int index, float value);
  void add_array(float value);
  const ::google::protobuf::RepeatedField< float >&
      array() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_array();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:tfaas.Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > array_;
  mutable int _array_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_tfaas_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PhysicsObjects : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tfaas.PhysicsObjects) */ {
 public:
  PhysicsObjects();
  virtual ~PhysicsObjects();

  PhysicsObjects(const PhysicsObjects& from);

  inline PhysicsObjects& operator=(const PhysicsObjects& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PhysicsObjects(PhysicsObjects&& from) noexcept
    : PhysicsObjects() {
    *this = ::std::move(from);
  }

  inline PhysicsObjects& operator=(PhysicsObjects&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PhysicsObjects& default_instance();

  static inline const PhysicsObjects* internal_default_instance() {
    return reinterpret_cast<const PhysicsObjects*>(
               &_PhysicsObjects_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PhysicsObjects* other);
  friend void swap(PhysicsObjects& a, PhysicsObjects& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PhysicsObjects* New() const PROTOBUF_FINAL { return New(NULL); }

  PhysicsObjects* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PhysicsObjects& from);
  void MergeFrom(const PhysicsObjects& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PhysicsObjects* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tfaas.Data data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::tfaas::Data& data(int index) const;
  ::tfaas::Data* mutable_data(int index);
  ::tfaas::Data* add_data();
  ::google::protobuf::RepeatedPtrField< ::tfaas::Data >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::tfaas::Data >&
      data() const;

  // @@protoc_insertion_point(class_scope:tfaas.PhysicsObjects)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tfaas::Data > data_;
  mutable int _cached_size_;
  friend struct protobuf_tfaas_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Data

// string name = 1;
inline void Data::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Data::name() const {
  // @@protoc_insertion_point(field_get:tfaas.Data.name)
  return name_.GetNoArena();
}
inline void Data::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tfaas.Data.name)
}
#if LANG_CXX11
inline void Data::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tfaas.Data.name)
}
#endif
inline void Data::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tfaas.Data.name)
}
inline void Data::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tfaas.Data.name)
}
inline ::std::string* Data::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tfaas.Data.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Data::release_name() {
  // @@protoc_insertion_point(field_release:tfaas.Data.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Data::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tfaas.Data.name)
}

// repeated float array = 2;
inline int Data::array_size() const {
  return array_.size();
}
inline void Data::clear_array() {
  array_.Clear();
}
inline float Data::array(int index) const {
  // @@protoc_insertion_point(field_get:tfaas.Data.array)
  return array_.Get(index);
}
inline void Data::set_array(int index, float value) {
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:tfaas.Data.array)
}
inline void Data::add_array(float value) {
  array_.Add(value);
  // @@protoc_insertion_point(field_add:tfaas.Data.array)
}
inline const ::google::protobuf::RepeatedField< float >&
Data::array() const {
  // @@protoc_insertion_point(field_list:tfaas.Data.array)
  return array_;
}
inline ::google::protobuf::RepeatedField< float >*
Data::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:tfaas.Data.array)
  return &array_;
}

// -------------------------------------------------------------------

// PhysicsObjects

// repeated .tfaas.Data data = 1;
inline int PhysicsObjects::data_size() const {
  return data_.size();
}
inline void PhysicsObjects::clear_data() {
  data_.Clear();
}
inline const ::tfaas::Data& PhysicsObjects::data(int index) const {
  // @@protoc_insertion_point(field_get:tfaas.PhysicsObjects.data)
  return data_.Get(index);
}
inline ::tfaas::Data* PhysicsObjects::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:tfaas.PhysicsObjects.data)
  return data_.Mutable(index);
}
inline ::tfaas::Data* PhysicsObjects::add_data() {
  // @@protoc_insertion_point(field_add:tfaas.PhysicsObjects.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tfaas::Data >*
PhysicsObjects::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:tfaas.PhysicsObjects.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tfaas::Data >&
PhysicsObjects::data() const {
  // @@protoc_insertion_point(field_list:tfaas.PhysicsObjects.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace tfaas

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tfaas_2eproto__INCLUDED
